/*********************************************************************************************
	> File Name: database.h
	> Author:
	> Mail:
	> Created Time: 2017年05月23日 星期二 10时29分03秒
    > Featurs: 声明一个结构体,保存每个选课的学生和其选择的课程
               可以声明一个****结构体数组****,用来保存选修同一课程的学生.在后期方案中被放弃.
 ********************************************************************************************/
#ifndef _DATABASE_H
#define _DATABASE_H
//头文件
#include "student.h"
#include "subject.h"
//宏定义
//声明数据库信息结构体
typedef struct {
                SUBJECT subject;            //保存课程信息的结构体
                STUDENT student;            //保存选课的学生信息结构体
} DATABASE;

/*****************************************************************
 * 将学生选课信息从二进制文件中读取并且显示
 * 由于系统不同,所以产生的二进制文件或具有不可移植性
 * 甚至同一个系统的不同编译设置也可能会导致不可移植性
 *
 * ****使用函数之前需要创建文件,否则可能无法正常工作****
******************************************************************/
void show_database_info(void);

/******************************************************************************************
 *从二进制文件中读取学生信息并且保存到文本文件中以便查阅
*******************************************************************************************/
void save_database_txt(void);

/***************添加选课信息到二进制文件*****************
 * 添加选课信息到datbase.dat文件中
 * 通过传入选课信息结构体指针的方式传入结构体信息到文件
*********************************************************/
void append_database(const DATABASE * database_append); //待添加的选课信息结构体指针

/**************************************************************************
 * 如果search_subject()找到了课程信息则\
 * 打开相应课程二进制文件输出选课学生信息
***************************************************************************/
void search_database_subject(const char * ID);

/*******************************************************
*delete by search
*******************************************************/
void delete_database(const char * student_ID, const char * subject_ID);
#endif
